<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        2Q==
</value>
  </data>
</root>